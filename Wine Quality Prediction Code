import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
data = pd.read_csv("C:\\Users\\Lenevo\\Downloads\\WineQT (1).csv")
data.head()
data.tail()
data.shape
data.columns
data.isnull().sum()
data.describe()
data.corr()
plt.figure(figsize=(10,10))
sns.heatmap(data.corr(),cbar = True, square = True, fmt='.2f',annot=True,cmap='Greens')
X= data.drop(['quality'],axis=1)
y=data['quality']
print(X)
print(y)
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=42)
print(X.shape,X_train.shape,X_test.shape)
model= LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
y_pred
mse =mean_squared_error(y_test,y_pred)
print("Mean Squared Error:",mse)
rmse = mse**0.5
print("Root Mean Squared Error: ",rmse)
r_squared = model.score(X_test,y_test)
print("R-squared:",r_squared)
new_sample =[[8,0.666,0.12,1.9,0.067,15.0,57.0,.99512,3.52,0.74,9.8,6]]
predicted_quality=model.predict(new_sample)
print("Predicted quality of the new wine sample:",predicted_quality)
plt.scatter(y_test,y_pred)
plt.xlabel("Actual quality")
plt.ylabel("Predicted quality")
plt.title("Wine Quality Prediction")
plt.show()
